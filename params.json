{"name":"uritemplate","tagline":"URI template parsing for Humans","body":"# uritemplate\r\n\r\n[Documentation][] -- [GitHub][] -- [BitBucket][] -- [Travis-CI][]\r\n\r\nSimple python library to deal with `URI Templates`_. The API looks like\r\n\r\n```python\r\nfrom uritemplate import URITemplate, expand\r\n\r\ngist_uri = 'https://api.github.com/users/sigmavirus24/gists{/gist_id}'\r\nt = URITemplate(gist_uri)\r\nprint(t.expand(gist_id=123456))\r\n# => https://api.github.com/users/sigmavirus24/gists/123456\r\n\r\n# or\r\nprint(expand(gist_uri, gist_id=123456))\r\n\r\n# also\r\nt.expand({'gist_id': 123456})\r\nprint(expand(gist_uri, {'gist_id': 123456}))\r\n```\r\n\r\nWhere it might be useful to have a class\r\n\r\n```python\r\n\r\nimport requests\r\n\r\nclass GitHubUser(object):\r\n    url = URITemplate('https://api.github.com/user{/login}')\r\n    def __init__(self, name):\r\n        self.api_url = url.expand(login=name)\r\n        response = requests.get(self.api_url)\r\n        if response.status_code == 200:\r\n           self.__dict__.update(response.json())\r\n```\r\n\r\nWhen the module containing this class is loaded, ``GitHubUser.url`` is \r\nevaluated and so the template is created once. It's often hard to notice in \r\nPython, but object creation can consume a great deal of time and so can the \r\n``re`` module which uritemplate relies on. Constructing the object once should \r\nreduce the amount of time your code takes to run.\r\n\r\n## Installing\r\n\r\n    pip install uritemplate.py\r\n\r\n# License\r\n\r\n[Modified BSD license][license]\r\n\r\n\r\n[Documentation]: http://uritemplate.rtfd.org/\r\n[GitHub]: https://github.com/sigmavirus24/uritemplate\r\n[BitBucket]: https://bitbucket.org/icordasc/uritemplate\r\n[Travis-CI]: https://travis-ci.org/sigmavirus24/uritemplate\r\n[URI Templates]: http://tools.ietf.org/html/rfc6570\r\n[license]: https://github.com/sigmavirus24/uritemplate/blob/master/LICENSE","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}